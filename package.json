{
  "name": "redux-query",
  "version": "2.3.1-rc.2",
  "description": "A library for querying and managing network state in React/Redux applications",
  "homepage": "https://github.com/amplitude/redux-query",
  "main": "dist/commonjs/index.js",
  "module": "dist/es/index.js",
  "jsnext:main": "dist/es/index.js",
  "scripts": {
    "postinstall": "cd dist || (mkdir ./dist && npm run build:lib)",
    "build:commonjs": "npm run clean:commonjs && cross-env NODE_ENV=production cross-env BABEL_ENV=commonjs babel src --out-dir dist/commonjs --ignore examples/,test/",
    "build:es": "npm run clean:es && cross-env NODE_ENV=production cross-env BABEL_ENV=es babel src --out-dir dist/es --ignore examples/,test/",
    "build:umd": "npm run clean:umd && cross-env NODE_ENV=production webpack --config webpack.config.js --bail",
    "build:site": "cd site && npm run build",
    "build:examples": "cd examples/async && npm run build",
    "build:lib": "npm run build:commonjs && npm run build:es && npm run build:umd",
    "build": "npm run build:commonjs && npm run build:es && npm run build:umd && npm run build:site && npm run build:examples",
    "clean:commonjs": "rimraf dist/commonjs",
    "clean:coverage": "rimraf coverage",
    "clean:es": "rimraf dist/es",
    "clean:umd": "rimraf dist/umd",
    "clean": "npm run clean:commonjs && npm run clean:es && npm run clean:umd",
    "coverage": "nyc report --reporter=text-lcov > coverage.lcov && codecov",
    "deploy": "gh-pages -d site/build",
    "prebuild": "npm run lint",
    "predeploy": "npm run build:site",
    "lint": "eslint src test --fix",
    "test:cov": "cross-env NODE_ENV=test nyc npm test",
    "test": "mocha --compilers js:babel-core/register --reporter spec test/**/*.test.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/vizum/redux-query.git"
  },
  "keywords": [
    "redux",
    "react",
    "query",
    "fetch",
    "REST"
  ],
  "author": "Ryan Ashcraft <ryan@amplitude.com>",
  "license": "MIT",
  "dependencies": {
    "backo": "^1.1.0",
    "invariant": "^2.2.0",
    "json-stable-stringify": "^1.0.0",
    "lodash.difference": "^4.5.0",
    "lodash.get": "^4.4.2",
    "lodash.identity": "^3.0.0",
    "lodash.includes": "^4.3.0",
    "lodash.intersection": "^4.4.0",
    "lodash.omit": "^4.5.0",
    "lodash.pick": "^4.4.0",
    "lodash.pickby": "^4.6.0",
    "lodash.values": "^4.3.0",
    "prop-types": "^15.6.2",
    "superagent": "^3.8.3"
  },
  "peerDependencies": {
    "react": ">=14",
    "redux": ">=2.0.0"
  },
  "devDependencies": {
    "@babel/cli": "7.0.0-beta.51",
    "@babel/core": "7.0.0-beta.51",
    "@babel/preset-es2015": "7.0.0-beta.51",
    "@babel/preset-react": "7.0.0-beta.51",
    "@babel/preset-stage-2": "7.0.0-beta.51",
    "babel-eslint": "8.2.5",
    "babel-loader": "v8.0.0-beta.0",
    "chai": "^3.5.0",
    "codecov": "^1.0.1",
    "cross-env": "^1.0.7",
    "eslint": "^3.3.1",
    "eslint-plugin-import": "^2.12.0",
    "eslint-plugin-prettier": "^2.0.1",
    "eslint-plugin-react": "^6.1.1",
    "gh-pages": "^0.12.0",
    "mocha": "^2.4.5",
    "nyc": "^10.0.0",
    "prettier": "^1.3.1",
    "react": "^16.0.0",
    "rimraf": "^2.6.2",
    "superagent-mock": "^3.7.0",
    "webpack": "^3.12.0"
  }
}
